/** dynamicc.c.in - test Dynamic C calling convention support.
    AFAIK the original Dynamic C only supported Z180 and the Rabbits.
    We support this calling convention for all Z80-like architectures that have ix, though.

    rtype: signed char, unsigned char, signed int, unsigned int, signed long, unsigned long
*/
#include <testfwk.h>

#define VAL 0xaa55a55a

void fnoret(void) __dynamicc
{
}

{rtype} fret(void) __dynamicc
{
  return (({rtype})VAL);
}

// A function that uses the stack a lot, so the frame pointer is unlikely to be omitted.
int frameptruser (char i, int j, long k, long long l)
{
  volatile int a[5];
  a[0] = i; a[1] = j; a[2] = k, a[3] = l;
  
  // __dynamicc has the caller save ix (used as framepointer by SDCC).
  a[4] = fret ();
  fnoret ();
  
  return (a[0] + a[1] + a[2] + a[3] + a[4]); // The reads from the array should use the frame pointer.
}

// TODO: test struct/union return when supported for __dynamicc
// TODO: test parameter passing when supported for __dynamicc

void testDynamicC(void)
{
  ASSERT (fret () == ({rtype})VAL);
  ASSERT (frameptruser (1, 2, 3, 4) == 1 + 2 + 3 + 4 + (int)({rtype})VAL);
}

